---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@components/ui/portable-text'

export const BenefitsGrid_Query = `
  _type == "BenefitsGrid" => {
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('subheading')}
    benefits[] {
      ${PortableTextQuery('title')}
      ${PortableTextQuery('description')}
    }
  },
`

export type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  subheading?: PortableTextValue
  benefits: {
    title: PortableTextValue
    description: PortableTextValue
  }[]
}

const { index, sectionId, heading, subheading, benefits } = Astro.props
---

<section class="BenefitsGrid" id={sectionId}>
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading" />
    {subheading && <PortableText value={subheading} class="subheading" />}
  </header>
  <ol class="list">
    {
      benefits.map(({ title, description }) => (
        <li class="item">
          <PortableText value={title} heading={index === 0 ? 'h2' : 'h3'} class="heading h3" />
          <PortableText value={description} class="description" />
        </li>
      ))
    }
  </ol>
</section>

<style lang="scss">
  .BenefitsGrid {
    padding: clamp(calc(48rem / 16), calc(64vw / 7.68), calc(96rem / 16)) 0;
    display: grid;
    align-items: flex-start;
    gap: clamp(2rem, calc(48vw / 7.68), 3rem) clamp(calc(82rem / 16), calc(82vw / 7.68), calc(116rem / 16));
    @media (min-width: calc(1250rem / 16)) {
      grid-template-columns: 1fr 1.75fr;
    }
  }
  header {
    max-width: calc(641rem / 16);
    .subheading {
      margin-top: 1.5rem;
    }
  }
  .list {
    display: grid;
    gap: clamp(calc(24rem / 16), calc(32vw / 7.68), calc(36rem / 16)) calc(20rem / 16);
    counter-reset: counter;
    .item {
      counter-increment: counter;
      &::before {
        content: '0' counter(counter);
        display: block;
        color: var(--neutral-400, #868585);
        font-size: 1rem;
        margin-bottom: clamp(calc(8rem / 16), calc(20vw / 7.68), calc(28rem / 16));
      }
      .description {
        font-size: 1rem;
      }
    }
    .heading {
      margin-bottom: clamp(calc(8rem / 16), calc(12vw / 7.68), calc(12rem / 16));
    }
    @media (max-width: calc(1249rem/16)) {
      max-width: calc(842rem / 16);
    }
    @media (min-width: calc(550rem / 16)) {
      grid-template-columns: 1fr 1fr;
    }
  }
</style>
