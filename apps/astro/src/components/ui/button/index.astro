---
import type { HTMLAttributes } from 'astro/types'

export type Props = HTMLAttributes<'a' | 'button'> & {
  text?: string | HTMLElement
  theme?: 'primary' | 'secondary'
  linkType?: 'external' | 'internal' | 'internalId' | undefined
  href?: string
}

const { text, theme = 'primary', linkType = 'internal', href, ...props } = Astro.props

const isExternal = linkType === 'external'
const children = (await Astro.slots.render('default')) ?? text
---

{
  !!href ? (
    <a
      href={href}
      {...(isExternal ? { target: '_blank', rel: 'noreferrer' } : {})}
      data-theme={theme}
      {...(props as HTMLAttributes<'a'>)}>
      {children}
    </a>
  ) : (
    <button data-theme={theme} {...(props as HTMLAttributes<'button'>)}>
      {children}
    </button>
  )
}

<style lang="scss">
  a,
  button {
    font-size: clamp(calc(14rem / 16), calc(16vw / 7.68), 1rem);
    text-align: center;
    @media (max-width: 499px) {
      width: 100%;
    }
    &[data-theme='primary'] {
      padding: 8px 32px;
      color: var(--neutral-700, #222);
      position: relative;
      z-index: 1;
      background: var(--primary-500, #dbb039);
      transition: background-color 0.3s;
      &::before {
        content: '';
        position: absolute;
        width: 30px;
        height: 24px;
        right: -0.5px;
        bottom: -0.5px;
        background-color: var(--neutral-700, #222);
        clip-path: polygon(100% 0, 0 100%, 100% 100%);
      }
      &:hover {
        background: var(--primary-400, #f4cb5b);
      }
      &:active {
        background: var(--primary-300, #ffe6a2);
      }
    }
    &[data-theme='secondary'] {
      padding: 8px 32px;
      box-shadow: inset 0px 0px 0px 1px var(--primary-300, #ffe6a2);
      background-color: var(--neutral-700, #222);
      color: var(--primary-300, #ffe6a2);
      transition:
        background-color 0.3s,
        color 0.3s,
        box-shadow 0.3s;
      &:hover {
        box-shadow: inset 0px 0px 0px 1px var(--primary-400, #f4cb5b);
        background-color: var(--neutral-650, #2c2c2c);
        color: var(--primary-400, #f4cb5b);
      }
      &:active {
        box-shadow: inset 0px 0px 0px 1px var(--primary-400, #f4cb5b);
        background-color: var(--neutral-600, #3b3b3b);
        color: var(--primary-400, #f4cb5b);
      }
    }
  }
  :global([light-background]) {
    a,
    button {
      &[data-theme='primary'] {
        &::before {
          background-color: var(--primary-100, #edebe7);
        }
      }
    }
  }
</style>
